/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Market,
  MarketInterface,
} from "../../../contracts/Market.sol/Market";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_outbox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nftContractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "Bought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nftContractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "Listed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "domainId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "nftContractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "seller",
        type: "address",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "domainToContractAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "domainId",
        type: "uint32",
      },
    ],
    name: "getResisteredContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_origin",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "handle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "domainIdTo",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "ourContractAddress",
        type: "address",
      },
    ],
    name: "list",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "listedPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outbox",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "domainId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001948380380620019488339818101604052810190620000379190620001d5565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000207565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200019d8262000170565b9050919050565b620001af8162000190565b8114620001bb57600080fd5b50565b600081519050620001cf81620001a4565b92915050565b600060208284031215620001ee57620001ed6200016b565b5b6000620001fe84828501620001be565b91505092915050565b61173180620002176000396000f3fe60806040526004361061009c5760003560e01c80637f51c0ae116100645780637f51c0ae146101705780638da5cb5b146101ad578063a80e1a3d146101d8578063cb14924f14610215578063ce11e6ab14610231578063f2fde38b1461025c5761009c565b80632e36a5db146100a1578063526ca632146100de57806356d5d475146101075780636383847c14610130578063715018a614610159575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c39190610ab1565b610285565b6040516100d59190610af7565b60405180910390f35b3480156100ea57600080fd5b5061010560048036038101906101009190610bd8565b61029d565b005b34801561011357600080fd5b5061012e60048036038101906101299190610cb8565b610380565b005b34801561013c57600080fd5b5061015760048036038101906101529190610d2c565b610527565b005b34801561016557600080fd5b5061016e61055f565b005b34801561017c57600080fd5b5061019760048036038101906101929190610d6c565b610573565b6040516101a49190610da8565b60405180910390f35b3480156101b957600080fd5b506101c26105a4565b6040516101cf9190610da8565b60405180910390f35b3480156101e457600080fd5b506101ff60048036038101906101fa9190610d6c565b6105cd565b60405161020c9190610dd2565b60405180910390f35b61022f600480360381019061022a9190610e2b565b6105e5565b005b34801561023d57600080fd5b5061024661072b565b6040516102539190610da8565b60405180910390f35b34801561026857600080fd5b50610283600480360381019061027e9190610ea6565b610751565b005b60026020528060005260406000206000915090505481565b8473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016102da93929190610ed3565b600060405180830381600087803b1580156102f457600080fd5b505af1158015610308573d6000803e3d6000fd5b5050505061033c8282878733886040516020016103289493929190610f67565b6040516020818303038152906040526107d5565b7f8b06cda60618abf2b2d07227f9dd63ec6349ca3269ce0eb18d49122a48362ad8858533866040516103719493929190610fbf565b60405180910390a15050505050565b8383600080600360008563ffffffff1663ffffffff168152602001908152602001600020549050808314156103b457600191505b60008060008060008a8a8101906103cb9190611145565b94509450945094509450610414856040518060400160405280600781526020017f4c697374696e6700000000000000000000000000000000000000000000000000815250610894565b156104645760008d858585604051602001610432949392919061127b565b604051602081830303815290604052805190602001209050816002600083815260200190815260200160002081905550505b6104a3856040518060400160405280600781526020017f54726164696e6700000000000000000000000000000000000000000000000000815250610894565b15610518578373ffffffffffffffffffffffffffffffffffffffff166323b872dd3084866040518463ffffffff1660e01b81526004016104e593929190610ed3565b600060405180830381600087803b1580156104ff57600080fd5b505af1158015610513573d6000803e3d6000fd5b505050505b50505050505050505050505050565b61052f6108ed565b6105388161096b565b600360008463ffffffff1663ffffffff168152602001908152602001600020819055505050565b6105676108ed565b610571600061098e565b565b600061059d600360008463ffffffff1663ffffffff16815260200190815260200160002054610a52565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60036020528060005260406000206000915090505481565b6000858484846040516020016105fe94939291906112f2565b604051602081830303815290604052805190602001209050346002600083815260200190815260200160002054111561063657600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc60026000848152602001908152602001600020549081150290604051600060405180830381858888f1935050505015801561068f573d6000803e3d6000fd5b506106d3868686863360026000888152602001908152602001600020546040516020016106bf949392919061138c565b6040516020818303038152906040526107d5565b7fbe39bcb4b5645ce3e99dc49d095db856201db6af874a4d39b96cd1ed4a06a11d848484600260008681526020019081526020016000205460405161071b9493929190611443565b60405180910390a1505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6107596108ed565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c0906114fa565b60405180910390fd5b6107d28161098e565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fa31de018461081d8561096b565b846040518463ffffffff1660e01b815260040161083c939291906115b1565b602060405180830381600087803b15801561085657600080fd5b505af115801561086a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088e9190611604565b50505050565b6000816040516020016108a79190611678565b60405160208183030381529060405280519060200120836040516020016108ce9190611678565b6040516020818303038152906040528051906020012014905092915050565b6108f5610a5f565b73ffffffffffffffffffffffffffffffffffffffff166109136105a4565b73ffffffffffffffffffffffffffffffffffffffff1614610969576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610960906116db565b60405180910390fd5b565b60008173ffffffffffffffffffffffffffffffffffffffff1660001b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008160001c9050919050565b600033905090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610a8e81610a7b565b8114610a9957600080fd5b50565b600081359050610aab81610a85565b92915050565b600060208284031215610ac757610ac6610a71565b5b6000610ad584828501610a9c565b91505092915050565b6000819050919050565b610af181610ade565b82525050565b6000602082019050610b0c6000830184610ae8565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b3d82610b12565b9050919050565b610b4d81610b32565b8114610b5857600080fd5b50565b600081359050610b6a81610b44565b92915050565b610b7981610ade565b8114610b8457600080fd5b50565b600081359050610b9681610b70565b92915050565b600063ffffffff82169050919050565b610bb581610b9c565b8114610bc057600080fd5b50565b600081359050610bd281610bac565b92915050565b600080600080600060a08688031215610bf457610bf3610a71565b5b6000610c0288828901610b5b565b9550506020610c1388828901610b87565b9450506040610c2488828901610b87565b9350506060610c3588828901610bc3565b9250506080610c4688828901610b5b565b9150509295509295909350565b600080fd5b600080fd5b600080fd5b60008083601f840112610c7857610c77610c53565b5b8235905067ffffffffffffffff811115610c9557610c94610c58565b5b602083019150836001820283011115610cb157610cb0610c5d565b5b9250929050565b60008060008060608587031215610cd257610cd1610a71565b5b6000610ce087828801610bc3565b9450506020610cf187828801610a9c565b935050604085013567ffffffffffffffff811115610d1257610d11610a76565b5b610d1e87828801610c62565b925092505092959194509250565b60008060408385031215610d4357610d42610a71565b5b6000610d5185828601610bc3565b9250506020610d6285828601610b5b565b9150509250929050565b600060208284031215610d8257610d81610a71565b5b6000610d9084828501610bc3565b91505092915050565b610da281610b32565b82525050565b6000602082019050610dbd6000830184610d99565b92915050565b610dcc81610a7b565b82525050565b6000602082019050610de76000830184610dc3565b92915050565b6000610df882610b12565b9050919050565b610e0881610ded565b8114610e1357600080fd5b50565b600081359050610e2581610dff565b92915050565b600080600080600060a08688031215610e4757610e46610a71565b5b6000610e5588828901610bc3565b9550506020610e6688828901610b5b565b9450506040610e7788828901610b5b565b9350506060610e8888828901610b87565b9250506080610e9988828901610e16565b9150509295509295909350565b600060208284031215610ebc57610ebb610a71565b5b6000610eca84828501610b5b565b91505092915050565b6000606082019050610ee86000830186610d99565b610ef56020830185610d99565b610f026040830184610ae8565b949350505050565b600082825260208201905092915050565b7f4c697374696e6700000000000000000000000000000000000000000000000000600082015250565b6000610f51600783610f0a565b9150610f5c82610f1b565b602082019050919050565b600060a0820190508181036000830152610f8081610f44565b9050610f8f6020830187610d99565b610f9c6040830186610ae8565b610fa96060830185610d99565b610fb66080830184610ae8565b95945050505050565b6000608082019050610fd46000830187610d99565b610fe16020830186610ae8565b610fee6040830185610d99565b610ffb6060830184610ae8565b95945050505050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61105282611009565b810181811067ffffffffffffffff821117156110715761107061101a565b5b80604052505050565b6000611084610a67565b90506110908282611049565b919050565b600067ffffffffffffffff8211156110b0576110af61101a565b5b6110b982611009565b9050602081019050919050565b82818337600083830152505050565b60006110e86110e384611095565b61107a565b90508281526020810184848401111561110457611103611004565b5b61110f8482856110c6565b509392505050565b600082601f83011261112c5761112b610c53565b5b813561113c8482602086016110d5565b91505092915050565b600080600080600060a0868803121561116157611160610a71565b5b600086013567ffffffffffffffff81111561117f5761117e610a76565b5b61118b88828901611117565b955050602061119c88828901610e16565b94505060406111ad88828901610b87565b93505060606111be88828901610e16565b92505060806111cf88828901610b87565b9150509295509295909350565b60008160e01b9050919050565b60006111f4826111dc565b9050919050565b61120c61120782610b9c565b6111e9565b82525050565b60008160601b9050919050565b600061122a82611212565b9050919050565b600061123c8261121f565b9050919050565b61125461124f82610b32565b611231565b82525050565b6000819050919050565b61127561127082610ade565b61125a565b82525050565b600061128782876111fb565b6004820191506112978286611243565b6014820191506112a78285611264565b6020820191506112b78284611243565b60148201915081905095945050505050565b60006112d48261121f565b9050919050565b6112ec6112e782610ded565b6112c9565b82525050565b60006112fe82876111fb565b60048201915061130e8286611243565b60148201915061131e8285611264565b60208201915061132e82846112db565b60148201915081905095945050505050565b7f54726164696e6700000000000000000000000000000000000000000000000000600082015250565b6000611376600783610f0a565b915061138182611340565b602082019050919050565b600060a08201905081810360008301526113a581611369565b90506113b46020830187610d99565b6113c16040830186610ae8565b6113ce6060830185610d99565b6113db6080830184610ae8565b95945050505050565b6000819050919050565b60006114096114046113ff84610b12565b6113e4565b610b12565b9050919050565b600061141b826113ee565b9050919050565b600061142d82611410565b9050919050565b61143d81611422565b82525050565b60006080820190506114586000830187610d99565b6114656020830186610ae8565b6114726040830185611434565b61147f6060830184610ae8565b95945050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006114e4602683610f0a565b91506114ef82611488565b604082019050919050565b60006020820190508181036000830152611513816114d7565b9050919050565b61152381610b9c565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611563578082015181840152602081019050611548565b83811115611572576000848401525b50505050565b600061158382611529565b61158d8185611534565b935061159d818560208601611545565b6115a681611009565b840191505092915050565b60006060820190506115c6600083018661151a565b6115d36020830185610dc3565b81810360408301526115e58184611578565b9050949350505050565b6000815190506115fe81610b70565b92915050565b60006020828403121561161a57611619610a71565b5b6000611628848285016115ef565b91505092915050565b600081519050919050565b600081905092915050565b600061165282611631565b61165c818561163c565b935061166c818560208601611545565b80840191505092915050565b60006116848284611647565b915081905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006116c5602083610f0a565b91506116d08261168f565b602082019050919050565b600060208201905081810360008301526116f4816116b8565b905091905056fea264697066735822122063c8125a75022cd70d576aa598fd6ada9fe6658cafe42a6aa55d101d84e2f47864736f6c63430008090033";

type MarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Market__factory extends ContractFactory {
  constructor(...args: MarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _outbox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Market> {
    return super.deploy(_outbox, overrides || {}) as Promise<Market>;
  }
  override getDeployTransaction(
    _outbox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_outbox, overrides || {});
  }
  override attach(address: string): Market {
    return super.attach(address) as Market;
  }
  override connect(signer: Signer): Market__factory {
    return super.connect(signer) as Market__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketInterface {
    return new utils.Interface(_abi) as MarketInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Market {
    return new Contract(address, _abi, signerOrProvider) as Market;
  }
}
